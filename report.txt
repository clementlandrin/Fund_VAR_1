PAUL-ERNEST Martin & LANDRIN Clément

Fund VAR - TRACKING

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

SUMMARY OF THE METHOD

For track the eyes, we used a pair of glasses made by hand (see glasses.png), a webcam to capture the real world and a program (see the structure of the program bellow).

The glasses are composed by four color blops (red, blue, yellow and green) that are catched by our webcam in the 2D webcam space (see tracking.png). This blops are going to give informations about the position and the orientation of the regard.
We access those informations by using the program. Basically, the idea is to detect the blops and use the POSIT method to guess the position of the two eyes in the world space. We then can send them to Unity for the next TP.

Program structure :

- Initialization

- Main Loop

Initialization :

- Creation of window

- Callbacks (keys and mouse) set up

Main Loop :

- Blop detections

- Find position and orientation of the glasses using POSIT method in the camera space

- Transform the position and orientation matrix so we can track the eyes in the world space

- Send the positions of the three eyes (left, cyclope and right) using a client OSC

Blop detections :

- Find contours using image masks, HSV space and tolerance

- Create and smooth a bouding rectangle using the contour

- Set the center of the rectangle as the center of the corresponding color blop

- Return the center of the blop